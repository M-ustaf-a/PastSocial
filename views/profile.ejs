<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Profile Page</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            background-color: blanchedalmond;
            color: #A82400;
            line-height: 1.6;
        }

        header {
            background-color: transparent;
            padding: 5px;
            padding-left: 25px;
            width: 100%;
            position: sticky;
            backdrop-filter: blur(10px);
            top: 0; 
            z-index: 1000;
        }

        .profile-container {
            max-width: 800px;
            margin: 2rem auto;
            padding: 0 20px;
        }

        .profile-cover {
            height: 250px;
            background-color: #A82400;
            border-radius: 20px 20px 0 0;
            position: relative;
            overflow: hidden;
        }

        .profile-cover img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 20px 20px 0 0;
        }

        .profile-info {
            position: relative;
            background-color: blanchedalmond;
            border-radius: 0 0 20px 20px;
            padding: 80px 20px 30px;
            margin-bottom: 20px;
            text-align: center;
            box-shadow: 0 2px 4px rgba(168, 36, 0, 0.1);
        }

        .profile-avatar {
            width: 140px;
            height: 140px;
            border-radius: 50%;
            border: 4px solid blanchedalmond;
            position: absolute;
            top: -70px;
            left: 50%;
            transform: translateX(-50%);
            background-color: #fff;
            overflow: hidden;
            box-shadow: 0 4px 6px rgba(168, 36, 0, 0.1);
        }

        .profile-avatar img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .profile-name {
            font-size: 28px;
            margin-bottom: 10px;
            color: #A82400;
        }

        .profile-username {
            color: #A82400;
            opacity: 0.8;
            margin-bottom: 5px;
            font-size: 16px;
        }

        .profile-bio {
            max-width: 500px;
            margin: 0 auto 20px;
        }

        .action-buttons {
            display: flex;
            gap: 15px;
            justify-content: center;
            margin: 25px 0;
        }

        .action-button {
            padding: 10px 25px;
            border: 2px solid #A82400;
            border-radius: 25px;
            cursor: pointer;
            transition: all 0.3s ease;
            background: none;
            color: #A82400;
            font-weight: 500;
            font-size: 14px;
        }

        .action-button:hover {
            background: #A82400;
            color: blanchedalmond;
            transform: translateY(-2px);
        }

        .stats-bar {
            display: flex;
            justify-content: space-around;
            padding: 25px;
            background: rgba(168, 36, 0, 0.05);
            border-radius: 15px;
            margin-bottom: 30px;
            box-shadow: 0 2px 4px rgba(168, 36, 0, 0.05);
        }

        .stat-item {
            text-align: center;
        }

        .stat-number {
            font-size: 24px;
            font-weight: bold;
            color: #A82400;
        }

        .stat-label {
            font-size: 14px;
            opacity: 0.8;
            margin-top: 5px;
        }

        .content-tabs {
            display: flex;
            justify-content: center;
            gap: 40px;
            margin-bottom: 20px;
            border-bottom: 2px solid rgba(168, 36, 0, 0.2);
            padding-bottom: 10px;
        }

        .tab {
            padding: 10px 20px;
            cursor: pointer;
            position: relative;
        }

        .tab button {
            background-color: transparent;
            border: none;
            cursor: pointer;
            padding: 8px;
            transition: transform 0.3s ease;
        }

        .tab button:hover {
            transform: scale(1.1);
        }

        .tab svg {
            color: #A82400;
            opacity: 0.5;
            transition: all 0.3s ease;
        }

        .tab.active svg {
            opacity: 1;
            transform: scale(1.1);
        }

        .tab.active::after {
            content: '';
            position: absolute;
            bottom: -12px;
            left: 0;
            width: 100%;
            height: 2px;
            background: #A82400;
        }

        .community-content {
            margin-top: 30px;
            padding: 20px;
            border-radius: 15px;
            background: rgba(168, 36, 0, 0.05);
            display: none;
        }

        .community-item {
            display: flex;
            flex-direction: column;
            padding: 20px;
            margin-bottom: 15px;
            background: blanchedalmond;
            border-radius: 12px;
            transition: all 0.3s ease;
            border: 1px solid rgba(168, 36, 0, 0.1);
        }

        .community-item:hover {
            transform: translateY(-3px);
            box-shadow: 0 4px 12px rgba(168, 36, 0, 0.1);
        }

        .community-item h3 {
            margin-bottom: 10px;
            color: #A82400;
            font-size: 18px;
        }

        .community-item p {
            color: #A82400;
            opacity: 0.8;
            font-size: 0.95em;
            line-height: 1.6;
        }

        .community-thumbnail img {
            width: 250px;
            height: 200px;
        }

        .loading-spinner {
            display: none;
            text-align: center;
            padding: 30px;
            color: #A82400;
            font-size: 16px;
        }

        .error-message {
            text-align: center;
            color: #A82400;
            padding: 20px;
            background: rgba(168, 36, 0, 0.1);
            border-radius: 10px;
            margin: 20px 0;
        }

        @media (max-width: 650px) {
            .description {
                display: none;
            }
            .community-thumbnail img {
                width: 520px;
            }
        }

        @media (max-width: 600px) {
            .profile-container {
                padding: 0 15px;
            }
            .action-buttons {
                flex-wrap: wrap;
                gap: 10px;
            }
            .content-tabs {
                gap: 20px;
            }
            .profile-cover {
                height: 200px;
            }
            .profile-avatar {
                width: 120px;
                height: 120px;
                top: -60px;
            }
            .profile-name {
                font-size: 24px;
            }
            .stats-bar {
                padding: 15px;
            }
            .stat-number {
                font-size: 20px;
            }
        }

        @media(max-width: 450px) {
            .community-thumbnail img {
                width: 100%;
                object-fit: cover;
            }
        }
    </style>
</head>
<body>
    <header class="header">
        <div class="d-flex justify-content-between align-items-center flex-wrap">
            <a href="/community">
                <h1 style="color: #A82400; margin: 20px;">
                    <img src="/group.png" alt="group-icon" height="35" width="35">
                </h1>
            </a>
        </div>
    </header>

    <div class="profile-container">
        <div class="profile-cover">
            <a href="<%=user.image.url%>">
                <img src="<%=user.image.url%>" alt="Profile Cover">
            </a>
        </div>

        <div class="profile-info">
            <div class="profile-avatar">
                <a href="<%=user.image.url%>">
                    <img src="<%=user.image.url%>" alt="Profile">
                </a>
            </div>
            <h1 class="profile-name"><%=user.adminData?.name%></h1>
            <div class="profile-username"><%=user.username%></div>
            <small class="profile-bio"><%=user.adminData.boi%> âœ¨</small><br>
            <small style="color: rgb(96, 93, 93);"><%=user.adminData.role%> at <%=user.adminData.company%></small>
            
            <div class="action-buttons">
                <%if(!isStatus){%>
                    <button class="action-button link-button">Link</button>
                    <button class="action-button">Message</button>
                <%}else{%>
                    <button class="action-button link-button">LinkUp</button>
                <%}%>
            </div>
        </div>

        <div class="stats-bar">
            <div class="stat-item">
                <div class="stat-number">15.2K</div>
                <div class="stat-label">Followers</div>
            </div>
            <div class="stat-item">
                <div class="stat-number">892</div>
                <div class="stat-label">Following</div>
            </div>
            <div class="stat-item">
                <div class="stat-number">1.2M</div>
                <div class="stat-label">Likes</div>
            </div>
        </div>

        <div class="content-tabs">
            <div class="tab active">
                <button onclick="showCommunity(this, 'community')" aria-label="Show Community">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-box-seam" viewBox="0 0 16 16">
                        <path d="M8.186 1.113a.5.5 0 0 0-.372 0L1.846 3.5l2.404.961L10.404 2zm3.564 1.426L5.596 5 8 5.961 14.154 3.5zm3.25 1.7-6.5 2.6v7.922l6.5-2.6V4.24zM7.5 14.762V6.838L1 4.239v7.923zM7.443.184a1.5 1.5 0 0 1 1.114 0l7.129 2.852A.5.5 0 0 1 16 3.5v8.662a1 1 0 0 1-.629.928l-7.185 2.874a.5.5 0 0 1-.372 0L.63 13.09a1 1 0 0 1-.63-.928V3.5a.5.5 0 0 1 .314-.464z"/>
                    </svg>
                </button>
            </div>
            <div class="tab">
                <button onclick="showCommunity(this, 'activities')" aria-label="Show Activities">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-vignette" viewBox="0 0 16 16">
                        <path d="M8 1a7 7 0 1 0 0 14A7 7 0 0 0 8 1M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8"/>
                        <path d="M8.5 4.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0m0 7a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0m1.683-6.281a.5.5 0 1 1-.866-.5.5.5 0 0 1 .866.5m-3.5 6.062a.5.5 0 1 1-.866-.5.5.5 0 0 1 .866.5m4.598-4.598a.5.5 0 1 1-.5-.866.5.5 0 0 1 .5.866m-6.062 3.5a.5.5 0 1 1-.5-.866.5.5 0 0 1 .5.866M11.5 8.5a.5.5 0 1 1 0-1 .5.5 0 0 1 0 1m-7 0a.5.5 0 1 1 0-1 .5.5 0 0 1 0 1m6.281 1.683a.5.5 0 1 1 .5-.866.5.5 0 0 1-.5.866m-6.062-3.5a.5.5 0 1 1 .5-.866.5.5 0 0 1-.5.866m4.598 4.598a.5.5 0 1 1 .866-.5.5.5 0 0 1-.866.5m-3.5-6.062a.5.5 0 1 1 .866-.5.5.5 0 0 1-.866.5"/>
                    </svg>
                </button>
            </div>
            <div class="tab">
                <%if(isStatus){%>
                    <button onclick="showCommunity(this, 'bookmarks')" aria-label="Show Bookmarks">
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-bookmark" viewBox="0 0 16 16">
                            <path d="M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.777.416L8 13.101l-5.223 2.815A<path d="M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.777.416L8 13.101l-5.223 2.815A.5.5 0 0 1 2 15.5zm2-1a1 1 0 0 0-1 1v12.566l4.723-2.482a.5.5 0 0 1 .554 0L13 14.566V2a1 1 0 0 0-1-1z"/>
                        </svg>
                    </button>
                <%}%>
            </div>
        </div>

        <div class="loading-spinner">
            Loading...
        </div>

        <%for(let community of communities){%>
            <%if(community.userid === userId){%>
                <div class="community-content" id="communityData">
                    <!-- Content will be populated dynamically -->    
                </div>
            <%}%>
        <%}%>
    </div>

    <script>
        // Debounce function to prevent multiple rapid calls
        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }

        // Error handling function
        function handleError(container, message) {
            container.innerHTML = `
                <div class="error-message">
                    <p>${message}</p>
                    <button class="action-button" onclick="retryLastRequest()" style="margin-top: 10px;">
                        Retry
                    </button>
                </div>
            `;
        }

        // Handle link/linkup button functionality
        async function handleLinkButton(button) {
            const userId = window.location.pathname.split('/').pop(); // Get userId from URL
            
            try {
                if (button.textContent === 'Link') {
                    // Make API call to save the link
                    const response = await fetch(`/api/users/link/${userId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ userId }),
                        credentials: 'include'
                    });

                    if (!response.ok) {
                        throw new Error('Failed to save link');
                    }

                    // Update button text
                    button.textContent = 'Linkup';
                } else if (button.textContent === 'Linkup') {
                    // Make API call to remove the link
                    const response = await fetch(`/api/users/unlink/${userId}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ userId }),
                        credentials: 'include'
                    });
                    if (!response.ok) {
                        throw new Error('Failed to remove link');
                    }

                    // Update button text
                    button.textContent = 'Link';
                }
            } catch (error) {
                console.log(error);
            }
        }

        // Store the last request parameters for retry functionality
        let lastRequest = null;

        async function showCommunity(button, type) {
            // Store request parameters
            lastRequest = { button, type };

            // Update active tab
            const tabs = document.querySelectorAll('.tab');
            tabs.forEach(tab => tab.classList.remove('active'));
            button.parentElement.classList.add('active');

            // Get containers
            const spinner = document.querySelector('.loading-spinner');
            const contentContainer = document.querySelector('.community-content');
            
            // Show loading state
            spinner.style.display = 'block';
            contentContainer.style.display = 'none';

            try {
                const response = await fetch(`/api/community/communities`, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    credentials: 'include'
                });
                
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                } 
                const data = await response.json();
                displayCommunityData(data, type);
            } catch (error) {
                console.error('Error:', error);
                handleError(contentContainer, 'Failed to load content. Please try again.');
            } finally {
                spinner.style.display = 'none';
                contentContainer.style.display = 'block';
            }
        }

        function retryLastRequest() {
            if (lastRequest) {
                showCommunity(lastRequest.button, lastRequest.type);
            }
        }

        function formatDate(dateString) {
            if (!dateString) return 'Recently';
            const date = new Date(dateString);
            return new Intl.DateTimeFormat('en-US', {
                year: 'numeric',
                month: 'short',
                day: 'numeric'
            }).format(date);
        }

        function displayCommunityData(data, type) {
            const container = document.getElementById('communityData');
            container.innerHTML = '';

            if (!Array.isArray(data) || data.length === 0) {
                container.innerHTML = `
                    <div class="error-message" style="background: transparent;">
                        <p>No ${type} content available yet</p>
                    </div>
                `;
                return;
            }

            // Create and append items based on type
            data.forEach((item, index) => {
                const itemElement = document.createElement('div');
                itemElement.className = 'community-item';
                itemElement.style.opacity = '0';
                itemElement.style.transform = 'translateY(20px)';
                itemElement.style.transition = 'all 0.3s ease';

                switch(type) {
                    case 'community':
                        itemElement.innerHTML = `
                            <div class="community-header">
                                <a href="/community/${item._id}/main" style="text-decoration: none">
                                    <h3>${item.title || 'Untitled Post'}</h3>
                                    <div class="community-thumbnail" style="display: flex; gap: 20px;">
                                        ${item.thumbnail ? `
                                            <img 
                                                src="${item.thumbnail.url}" 
                                                alt="${item.title}" 
                                                style="border-radius: 8px; margin-top: 10px;"
                                                loading="lazy"
                                            >
                                        ` : ''}
                                        <p class="description" style="margin-top: 10px; overflow-y: scroll;overflow-x: hidden;scrollbar-width: none; height:200px">${item.description}</p>
                                    </div>
                                </a>
                            </div>
                            <div class="community-footer" style="margin-top: 15px; font-size: 0.9em; color: #A82400; opacity: 0.7;">
                                <span>${formatDate(item.date)}</span>
                                <span style="margin-left: 15px;">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16" style="vertical-align: -2px;">
                                        <path d="M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z"/>
                                    </svg>
                                    ${item.likes || 0}
                                </span>
                                <span style="margin-left: 15px;">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16" style="vertical-align: -2px;">
                                        <path d="M14 1a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1h-2.5a2 2 0 0 0-1.6.8L8 14.333 6.1 11.8a2 2 0 0 0-1.6-.8H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h2.5a1 1 0 0 1 .8.4l1.9 2.533a1 1 0 0 0 1.6 0l1.9-2.533a1 1 0 0 1 .8-.4H14a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z"/>
                                    </svg>
                                    ${item.comments || 0}
                                </span>
                            </div>
                        `;
                        break;

                    // Add other cases as needed
                }

                container.appendChild(itemElement);

                // Trigger animation
                setTimeout(() => {
                    itemElement.style.opacity = '1';
                    itemElement.style.transform = 'translateY(0)';
                }, index * 100);
            });
        }

        // Initialize event listeners
        document.addEventListener('DOMContentLoaded', () => {
            // Initialize link/linkup buttons
            const linkButtons = document.querySelectorAll('.link-button');
            linkButtons.forEach(button => {
                button.addEventListener('click', () => handleLinkButton(button));
            });

            // Initialize first tab
            const firstTab = document.querySelector('.tab button');
            if (firstTab) {
                showCommunity(firstTab, 'community');
            }
        });

        // Add smooth scrolling for better UX
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                document.querySelector(this.getAttribute('href')).scrollIntoView({
                    behavior: 'smooth'
                });
            });
        });
    </script>
</body>
</html>