<!-- <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Community Approval</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        body {
            font-family: 'Space Grotesk', sans-serif;
            background: linear-gradient(135deg, #ffebcd 0%, #fdd8a0 100%);
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
        }
        .login{
            margin-bottom: 23px;
            color: #d34848;
        }
        header img{
            width: 75%;
        }
        .form-container {
            background: #fee4bd;
            border-radius: 20px;
            box-shadow: 0 15px 35px rgba(0,0,0,0.1);
            width: 100%;
            max-width: 500px;
            padding: 40px;
            position: relative;
            overflow: hidden;
        }
        .form-container::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 5px;
            background: linear-gradient(to right, #A82400, #FF6B6B);
        }
        .form-step {
            display: none;
            animation: slideIn 0.5s forwards;
        }
        .form-step.active {
            display: block;
        }
        @keyframes slideIn {
            from { opacity: 0; transform: translateX(20px); }
            to { opacity: 1; transform: translateX(0); }
        }
        .input-group {
            margin-bottom: 20px;
        }
        .input-label {
            display: block;
            margin-bottom: 10px;
            font-weight: 600;
            color: #A82400;
        }
        .input-field {
            width: 100%;
            padding: 12px;
            border: 2px solid rgb(255, 231, 195);
            border-radius: 10px;
            transition: all 0.3s ease;
            background-color: blanchedalmond;
        }
        .input-field:focus {
            outline: none;
            border-color: #A82400;
            box-shadow: 0 0 0 3px rgba(168, 36, 0, 0.1);
        }
        .input-field:hover {
            transform: scale(1.01);
        }
        .navigation-buttons {
            display: flex;
            justify-content: space-between;
        }
        .btn {
            padding: 12px 20px;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        .btn-primary {
            background: linear-gradient(to right, #A82400, #FF6B6B);
            color: white;
        }
        .btn-secondary {
            background: #E0E0E0;
            color: #333;
        }
        .prev-step {
            padding: 6px 20px;
            border: 2px solid #A82400;
            border-radius: 25px;
            cursor: pointer;
            transition: all 0.3s ease;
            background: none;
            color: #A82400;
            font-weight: 500;
            font-size: 14px;
        }
        .prev-step:hover {
            background-color: #A82400;
            color: blanchedalmond;
        }
        .file-input-wrapper {
            position: relative;
            overflow: hidden;
        }
        .file-input-wrapper input[type="file"] {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            opacity: 0;
            cursor: pointer;
        }
    @media(max-width: 650px){
        body{
            display: block;
        }
        header{
            box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
            width: 100%;
            height: 85px;
        }
        header img{
            width: 10%;
            margin-left: 20px;
            margin-top: 20px;
        }
        .form-container{
            position: relative;
            margin-top: 200px;
            max-width: 660px;
        }
    }
        
    </style>
</head>
<body>
    <header>
        <a href="/community/<%=community.id%>/main" class="brand">
            <img src="/group.png" alt="Community login" />
        </a>
    </header>
    <div class="form-container">
        <h1 class="login">Login</h1>
        <form id="login" action="/community/<%=community.id%>/login" method="post">
            <div id="step1" class="form-step active">
                <div class="input-group">
                    <label for="email" class="input-label">Email</label>
                    <input type="email" id="email" class="input-field" name="email" required placeholder="Enter Email">
                </div>
                <div class="navigation-buttons">
                    <button type="button" class="btn btn-primary next-step">Next</button>
                </div>
            </div>

            <div id="step2" class="form-step">
                <div class="input-group">
                    <label for="password" class="input-label">Password</label>
                    <input type="password" id="password" class="input-field" name="password" required placeholder="Enter password">
                </div>
                <div class="navigation-buttons">
                    <button type="button" class="prev-step">Back</button>
                    <button type="submit" class="btn btn-primary">submit</button>
                </div>
            </div>
        </form>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const form = document.getElementById('login');
            const steps = document.querySelectorAll('.form-step');
            const nextButtons = document.querySelectorAll('.next-step');
            const prevButtons = document.querySelectorAll('.prev-step');

            nextButtons.forEach(button => {
                button.addEventListener('click', () => {
                    const currentStep = button.closest('.form-step');
                    const inputs = currentStep.querySelectorAll('input, textarea');
                    const isValid = Array.from(inputs).every(input => input.reportValidity());
                    
                    if (isValid) {
                        currentStep.classList.remove('active');
                        currentStep.nextElementSibling.classList.add('active');
                    }
                });
            });

            prevButtons.forEach(button => {
                button.addEventListener('click', () => {
                    const currentStep = button.closest('.form-step');
                    currentStep.classList.remove('active');
                    currentStep.previousElementSibling.classList.add('active');
                });
            });
        });
    </script>
</body>
</html> -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login - VirtuHub</title>
    <link href="https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary-color: #A82400;
            --primary-dark: #8A1E00;
            --secondary-color: #D63A0D;
            --accent-color: #FFEBCD;
            --bg-color: #FFEBCD;
            --card-bg: #FFF5E6;
            --hover-bg: #FFE4CC;
            --text-primary: #A82400;
            --text-secondary: #6B4423;
            --text-dark: #3A2317;
            --white: #FFFFFF;
            --error: #DC2626;
            --success: #059669;
            --shadow-sm: 0 2px 4px rgba(168, 36, 0, 0.08);
            --shadow-md: 0 4px 12px rgba(168, 36, 0, 0.12);
            --shadow-lg: 0 8px 24px rgba(168, 36, 0, 0.16);
            --radius-sm: 8px;
            --radius-md: 12px;
            --radius-lg: 16px;
            --radius-xl: 24px;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Plus Jakarta Sans', -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
            background: var(--bg-color);
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            position: relative;
            overflow-x: hidden;
        }

        /* Background Decoration */
        .bg-decoration {
            position: fixed;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 0;
            overflow: hidden;
        }

        .bg-shape {
            position: absolute;
            border-radius: 50%;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            opacity: 0.05;
        }

        .bg-shape:nth-child(1) {
            width: 400px;
            height: 400px;
            top: -200px;
            left: -200px;
            animation: float 20s infinite ease-in-out;
        }

        .bg-shape:nth-child(2) {
            width: 300px;
            height: 300px;
            bottom: -150px;
            right: -150px;
            animation: float 25s infinite ease-in-out reverse;
        }

        .bg-shape:nth-child(3) {
            width: 200px;
            height: 200px;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            animation: pulse 4s infinite ease-in-out;
        }

        @keyframes float {
            0%, 100% { transform: translate(0, 0) rotate(0deg); }
            33% { transform: translate(30px, -30px) rotate(120deg); }
            66% { transform: translate(-20px, 20px) rotate(240deg); }
        }

        @keyframes pulse {
            0%, 100% { transform: translate(-50%, -50%) scale(1); opacity: 0.05; }
            50% { transform: translate(-50%, -50%) scale(1.2); opacity: 0.08; }
        }

        /* Header */
        .header {
            background: var(--white);
            box-shadow: var(--shadow-sm);
            position: relative;
            z-index: 100;
        }

        .header-content {
            max-width: 1400px;
            margin: 0 auto;
            padding: 1rem 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .brand {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            text-decoration: none;
            color: var(--primary-color);
            transition: all 0.3s ease;
        }

        .brand:hover {
            transform: translateX(5px);
        }

        .brand-icon {
            width: 40px;
            height: 40px;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            border-radius: var(--radius-sm);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            transition: all 0.3s ease;
        }

        .brand:hover .brand-icon {
            transform: rotate(10deg) scale(1.1);
        }

        .brand-text {
            font-weight: 700;
            font-size: 1.25rem;
        }

        .header-actions {
            display: flex;
            gap: 1rem;
            align-items: center;
        }

        .header-link {
            color: var(--text-secondary);
            text-decoration: none;
            font-weight: 500;
            padding: 0.5rem 1rem;
            border-radius: var(--radius-sm);
            transition: all 0.3s ease;
        }

        .header-link:hover {
            background: var(--hover-bg);
            color: var(--primary-color);
        }

        /* Main Content */
        .main-container {
            flex: 1;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 2rem;
            position: relative;
            z-index: 10;
        }

        .login-card {
            background: var(--white);
            border-radius: var(--radius-lg);
            box-shadow: var(--shadow-lg);
            width: 100%;
            max-width: 450px;
            overflow: hidden;
            position: relative;
            animation: fadeInUp 0.6s ease-out;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .login-header {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: var(--white);
            padding: 2rem;
            text-align: center;
            position: relative;
            overflow: hidden;
        }

        .login-header::before {
            content: '';
            position: absolute;
            width: 150px;
            height: 150px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            top: -75px;
            right: -75px;
        }

        .login-title {
            font-size: 1.75rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
            position: relative;
        }

        .login-subtitle {
            font-size: 1rem;
            opacity: 0.9;
            position: relative;
        }

        .login-body {
            padding: 2rem;
        }

        /* Progress Indicator */
        .progress-bar {
            display: flex;
            justify-content: space-between;
            margin-bottom: 2rem;
            position: relative;
        }

        .progress-bar::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 0;
            right: 0;
            height: 2px;
            background: var(--hover-bg);
            transform: translateY(-50%);
            z-index: 0;
        }

        .progress-step {
            position: relative;
            z-index: 1;
            width: 40px;
            height: 40px;
            background: var(--hover-bg);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 600;
            color: var(--text-secondary);
            transition: all 0.3s ease;
        }

        .progress-step.active {
            background: var(--primary-color);
            color: var(--white);
            transform: scale(1.1);
        }

        .progress-step.completed {
            background: var(--success);
            color: var(--white);
        }

        .progress-step.completed::after {
            content: '✓';
            position: absolute;
            font-size: 1.2rem;
        }

        /* Form Styles */
        .form-step {
            display: none;
            animation: slideIn 0.4s ease-out;
        }

        .form-step.active {
            display: block;
        }

        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateX(20px);
            }
            to {
                opacity: 1;
                transform: translateX(0);
            }
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            color: var(--text-dark);
            font-weight: 600;
            font-size: 0.875rem;
        }

        .input-wrapper {
            position: relative;
        }

        .form-input {
            width: 100%;
            padding: 0.875rem 1rem;
            padding-left: 3rem;
            border: 2px solid var(--hover-bg);
            border-radius: var(--radius-md);
            font-size: 1rem;
            font-family: inherit;
            background: var(--white);
            transition: all 0.3s ease;
        }

        .form-input:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(168, 36, 0, 0.1);
            transform: translateY(-2px);
        }

        .form-input:hover {
            border-color: var(--secondary-color);
        }

        .input-icon {
            position: absolute;
            left: 1rem;
            top: 50%;
            transform: translateY(-50%);
            color: var(--text-secondary);
            transition: color 0.3s ease;
        }

        .form-input:focus ~ .input-icon {
            color: var(--primary-color);
        }

        /* Password Field */
        .password-input-wrapper {
            position: relative;
        }

        .password-toggle {
            position: absolute;
            right: 1rem;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            color: var(--text-secondary);
            cursor: pointer;
            padding: 0.25rem;
            transition: color 0.3s ease;
        }

        .password-toggle:hover {
            color: var(--primary-color);
        }

        /* Error Message */
        .error-message {
            color: var(--error);
            font-size: 0.75rem;
            margin-top: 0.25rem;
            display: none;
        }

        .error-message.show {
            display: block;
            animation: shake 0.3s ease;
        }

        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-5px); }
            75% { transform: translateX(5px); }
        }

        /* Navigation Buttons */
        .form-actions {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 2rem;
            gap: 1rem;
        }

        .btn {
            padding: 0.875rem 1.5rem;
            border: none;
            border-radius: var(--radius-md);
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 0.95rem;
            position: relative;
            overflow: hidden;
        }

        .btn-primary {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: var(--white);
            flex: 1;
        }

        .btn-primary::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.2);
            transition: left 0.5s ease;
        }

        .btn-primary:hover::before {
            left: 100%;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(168, 36, 0, 0.3);
        }

        .btn-primary:active {
            transform: translateY(0);
        }

        .btn-secondary {
            background: transparent;
            color: var(--primary-color);
            border: 2px solid var(--primary-color);
            padding: 0.75rem 1.5rem;
        }

        .btn-secondary:hover {
            background: var(--primary-color);
            color: var(--white);
        }

        .btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
            transform: none !important;
        }

        /* Remember Me & Forgot Password */
        .form-options {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 1rem;
        }

        .checkbox-wrapper {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .checkbox-input {
            width: 18px;
            height: 18px;
            accent-color: var(--primary-color);
            cursor: pointer;
        }

        .checkbox-label {
            color: var(--text-secondary);
            font-size: 0.875rem;
            cursor: pointer;
        }

        .forgot-link {
            color: var(--primary-color);
            text-decoration: none;
            font-size: 0.875rem;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .forgot-link:hover {
            color: var(--secondary-color);
            text-decoration: underline;
        }

        /* Social Login */
        .divider {
            display: flex;
            align-items: center;
            margin: 2rem 0;
            color: var(--text-secondary);
            font-size: 0.875rem;
        }

        .divider::before,
        .divider::after {
            content: '';
            flex: 1;
            height: 1px;
            background: var(--hover-bg);
        }

        .divider span {
            padding: 0 1rem;
        }

        .social-buttons {
            display: flex;
            gap: 1rem;
            margin-bottom: 1.5rem;
        }

        .social-btn {
            flex: 1;
            padding: 0.75rem;
            border: 2px solid var(--hover-bg);
            background: var(--white);
            border-radius: var(--radius-md);
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            color: var(--text-dark);
            text-decoration: none;
            font-weight: 500;
        }

        .social-btn:hover {
            border-color: var(--primary-color);
            transform: translateY(-2px);
            box-shadow: var(--shadow-sm);
        }

        /* Loading State */
        .loading-spinner {
            display: none;
            width: 20px;
            height: 20px;
            border: 2px solid var(--white);
            border-top-color: transparent;
            border-radius: 50%;
            animation: spin 0.8s linear infinite;
            margin: 0 auto;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        /* Footer */
        .login-footer {
            padding: 1.5rem;
            background: var(--card-bg);
            text-align: center;
            border-top: 1px solid var(--hover-bg);
        }

        .footer-text {
            color: var(--text-secondary);
            font-size: 0.875rem;
        }

        .footer-link {
            color: var(--primary-color);
            text-decoration: none;
            font-weight: 600;
        }

        .footer-link:hover {
            text-decoration: underline;
        }

        /* Success State */
        .success-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(5, 150, 105, 0.1);
            display: none;
            align-items: center;
            justify-content: center;
            z-index: 1000;
        }

        .success-message {
            background: var(--white);
            padding: 2rem;
            border-radius: var(--radius-lg);
            box-shadow: var(--shadow-lg);
            text-align: center;
            animation: scaleIn 0.5s ease-out;
        }

        @keyframes scaleIn {
            from {
                opacity: 0;
                transform: scale(0.8);
            }
            to {
                opacity: 1;
                transform: scale(1);
            }
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .header-content {
                padding: 1rem;
            }

            .header-link {
                padding: 0.5rem;
                font-size: 0.875rem;
            }

            .main-container {
                padding: 1rem;
            }

            .login-card {
                max-width: 100%;
            }

            .login-header {
                padding: 1.5rem;
            }

            .login-body {
                padding: 1.5rem;
            }

            .social-buttons {
                flex-direction: column;
            }
        }

        @media (max-width: 480px) {
            .login-title {
                font-size: 1.5rem;
            }

            .form-actions {
                flex-direction: column-reverse;
            }

            .btn {
                width: 100%;
            }

            .btn-secondary {
                width: 100%;
            }

            .form-options {
                flex-direction: column;
                gap: 1rem;
                align-items: flex-start;
            }
        }
    </style>
</head>
<body>
    <div class="bg-decoration">
        <div class="bg-shape"></div>
        <div class="bg-shape"></div>
        <div class="bg-shape"></div>
    </div>

    <!-- Header -->
    <header class="header">
        <div class="header-content">
            <a href="/community" class="brand">
                <div class="brand-icon">🌐</div>
                <span class="brand-text">VirtuHub</span>
            </a>
            <div class="header-actions">
                <!-- <a href="/community/<%= community.id %>/communityApproval" class="header-link">Approval</a> -->
            </div>
        </div>
    </header>

    <!-- Main Content -->
    <main class="main-container">
        <div class="login-card">
            <div class="login-header">
                <h1 class="login-title"><%=community.title%></h1>
                <p class="login-subtitle">Login to access your communities</p>
            </div>

            <div class="login-body">
                <!-- Progress Bar -->
                <div class="progress-bar">
                    <div class="progress-step active" id="progress1">1</div>
                    <div class="progress-step" id="progress2">2</div>
                </div>

                <form id="loginForm" action="/community/<%=community.id%>/login" method="post">
                    <!-- Step 1: Email -->
                    <div id="step1" class="form-step active">
                        <div class="form-group">
                            <label for="email" class="form-label">Email Address</label>
                            <div class="input-wrapper">
                                <input 
                                    type="email" 
                                    id="email" 
                                    name="email" 
                                    class="form-input" 
                                    placeholder="Enter your email"
                                    required
                                    autocomplete="email"
                                >
                                <svg class="input-icon" width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                                </svg>
                            </div>
                            <span class="error-message" id="emailError">Please enter a valid email address</span>
                        </div>

                        <div class="form-actions">
                            <button type="button" class="btn btn-primary" onclick="nextStep()">
                                Continue
                                <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24" style="margin-left: 0.5rem;">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
                                </svg>
                            </button>
                        </div>
                    </div>

                    <!-- Step 2: Password -->
                    <div id="step2" class="form-step">
                        <div class="form-group">
                            <label for="password" class="form-label">Password</label>
                            <div class="password-input-wrapper">
                                <div class="input-wrapper">
                                    <input 
                                        type="password" 
                                        id="password" 
                                        name="password" 
                                        class="form-input" 
                                        placeholder="Enter your password"
                                        required
                                        autocomplete="current-password"
                                        minlength="8"
                                    >
                                    <svg class="input-icon" width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
                                    </svg>
                                </div>
                                <button type="button" class="password-toggle" onclick="togglePassword()">
                                    <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                                    </svg>
                                </button>
                            </div>
                            <span class="error-message" id="passwordError">Password must be at least 8 characters</span>
                        </div>

                        <div class="form-options">
                            <div class="checkbox-wrapper">
                                <input type="checkbox" id="remember" name="remember" class="checkbox-input">
                                <label for="remember" class="checkbox-label">Remember me</label>
                            </div>
                            <a href="#" class="forgot-link">Forgot password?</a>
                        </div>

                        <div class="form-actions">
                            <button type="button" class="btn btn-secondary" onclick="prevStep()">
                                <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24" style="margin-right: 0.5rem;">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 17l-5-5m0 0l5-5m-5 5h12"></path>
                                </svg>
                                Back
                            </button>
                            <button type="submit" class="btn btn-primary" id="submitBtn">
                                <span class="btn-text">Sign In</span>
                                <div class="loading-spinner"></div>
                            </button>
                        </div>
                    </div>
                </form>
            </div>

            <div class="login-footer">
                <p class="footer-text">
                    <!-- Don't have an account?  -->
                    <!-- <a href="/community/<%= community.id %>/communityApproval" class="footer-link">Approval Now</a> -->
                </p>
            </div>
        </div>
    </main>

    <!-- Success Overlay -->
    <!-- <div class="success-overlay" id="successOverlay">
        <div class="success-message">
            <svg width="64" height="64" fill="none" stroke="currentColor" viewBox="0 0 24 24" style="color: var(--success); margin-bottom: 1rem;">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            <h2 style="color: var(--text-dark); margin-bottom: 0.5rem;">Login Successful!</h2>
            <p style="color: var(--text-secondary);">Redirecting to your communities...</p>
        </div>
    </div> -->

    <script>
        let currentStep = 1;
        const totalSteps = 2;

        // Form validation
        function validateEmail(email) {
            const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            return re.test(email);
        }

        function validatePassword(password) {
            return password.length >= 8;
        }

        // Show/hide error messages
        function showError(fieldId, message) {
            const errorElement = document.getElementById(fieldId + 'Error');
            const inputElement = document.getElementById(fieldId);
            
            errorElement.textContent = message;
            errorElement.classList.add('show');
            inputElement.style.borderColor = 'var(--error)';
        }

        function clearError(fieldId) {
            const errorElement = document.getElementById(fieldId + 'Error');
            const inputElement = document.getElementById(fieldId);
            
            errorElement.classList.remove('show');
            inputElement.style.borderColor = 'var(--hover-bg)';
        }

        // Navigation between steps
        function nextStep() {
            const emailInput = document.getElementById('email');
            const email = emailInput.value.trim();

            // Validate email
            if (!email) {
                showError('email', 'Email is required');
                return;
            }

            if (!validateEmail(email)) {
                showError('email', 'Please enter a valid email address');
                return;
            }

            clearError('email');

            // Move to next step
            document.getElementById(`step${currentStep}`).classList.remove('active');
            document.getElementById(`progress${currentStep}`).classList.add('completed');
            
            currentStep++;
            
            document.getElementById(`step${currentStep}`).classList.add('active');
            document.getElementById(`progress${currentStep}`).classList.add('active');

            // Focus on password field
            setTimeout(() => {
                document.getElementById('password').focus();
            }, 300);
        }

        function prevStep() {
            document.getElementById(`step${currentStep}`).classList.remove('active');
            document.getElementById(`progress${currentStep}`).classList.remove('active');
            
            currentStep--;
            
            document.getElementById(`step${currentStep}`).classList.add('active');
            document.getElementById(`progress${currentStep}`).classList.remove('completed');
            document.getElementById(`progress${currentStep}`).classList.add('active');
        }

        // Password visibility toggle
        function togglePassword() {
            const passwordInput = document.getElementById('password');
            const toggleButton = document.querySelector('.password-toggle svg');
            
            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                toggleButton.innerHTML = `
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21"></path>
                `;
                } else {
                passwordInput.type = 'password';
                toggleButton.innerHTML = `
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                `;
            }
        }

        // Form submission
      /*  document.getElementById('loginForm').addEventListener('submit', async function(e) {
            e.preventDefault();

            const email = document.getElementById('email').value.trim();
            const password = document.getElementById('password').value;

            // Validate inputs
            if (!validateEmail(email)) {
                showError('email', 'Please enter a valid email address');
                prevStep();
                return;
            }

            if (!validatePassword(password)) {
                showError('password', 'Password must be at least 8 characters');
                return;
            }

            //clearError('email');
            //clearError('password');

            // Show loading state
            //const submitBtn = document.getElementById('submitBtn');
           // const btnText = submitBtn.querySelector('.btn-text');
            const spinner = submitBtn.querySelector('.loading-spinner');
            
            submitBtn.disabled = true;
            btnText.style.display = 'none';
            spinner.style.display = 'block';

            // Simulate form submission (replace with actual submission)
            try {
                // In a real application, you would submit the form data here
                // For now, we'll simulate a successful login
                await new Promise(resolve => setTimeout(resolve, 1500));

                // Show success message
                document.getElementById('successOverlay').style.display = 'flex';

                // Redirect after a delay
                setTimeout(() => {
                    // Uncomment the line below for actual form submission
                    // this.submit();
                    window.location.href = '/community'; // Redirect to community page
                }, 2000);

            } catch (error) {
                // Handle error
                console.error('Login failed:', error);
                
                // Reset button state
                submitBtn.disabled = false;
                btnText.style.display = 'inline';
                spinner.style.display = 'none';

                // Show error message
                showError('password', 'Login failed. Please check your credentials.');
            }
        });
*/
        // Clear errors on input
        document.getElementById('email').addEventListener('input', function() {
            if (this.value.trim()) {
                clearError('email');
            }
        });

        document.getElementById('password').addEventListener('input', function() {
            if (this.value) {
                clearError('password');
            }
        });

        // Enter key navigation
        document.getElementById('email').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                e.preventDefault();
                nextStep();
            }
        });

        // Auto-focus on first field
        window.addEventListener('load', function() {
            document.getElementById('email').focus();
        });

        // Prevent going back when on step 1
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape' && currentStep > 1) {
                prevStep();
            }
        });

        // Add animation to brand icon on page load
        window.addEventListener('load', function() {
            const brandIcon = document.querySelector('.brand-icon');
            brandIcon.style.animation = 'pulse 2s ease-out';
            setTimeout(() => {
                brandIcon.style.animation = '';
            }, 2000);
        });

        // Optional: Add social login functionality
        document.querySelectorAll('.social-btn').forEach(btn => {
            btn.addEventListener('click', function(e) {
                e.preventDefault();
                const provider = this.textContent.trim();
                console.log(`Logging in with ${provider}`);
                // Implement social login logic here
            });
        });

        // Optional: Implement "Forgot Password" functionality
        document.querySelector('.forgot-link').addEventListener('click', function(e) {
            e.preventDefault();
            // Show forgot password modal or redirect to reset page
            console.log('Forgot password clicked');
            // You could show a modal or redirect to a password reset page
            // window.location.href = '/forgot-password';
        });

        // Optional: Remember me functionality
        document.getElementById('remember').addEventListener('change', function() {
            if (this.checked) {
                // Set flag to remember user
                console.log('Remember me checked');
                // In a real application, you might set a cookie or localStorage item
            }
        });

        // Add visual feedback for input focus
        document.querySelectorAll('.form-input').forEach(input => {
            input.addEventListener('focus', function() {
                this.parentElement.classList.add('focused');
            });

            input.addEventListener('blur', function() {
                this.parentElement.classList.remove('focused');
            });
        });

        // Optional: Add password strength indicator
        document.getElementById('password').addEventListener('input', function() {
            const password = this.value;
            let strength = 0;

            // Check password strength
            if (password.length >= 8) strength++;
            if (password.match(/[a-z]/)) strength++;
            if (password.match(/[A-Z]/)) strength++;
            if (password.match(/[0-9]/)) strength++;
            if (password.match(/[^a-zA-Z0-9]/)) strength++;

            // You could display a strength indicator here
            console.log('Password strength:', strength);
        });

        // Prevent form resubmission on page refresh
        if (window.history.replaceState) {
            window.history.replaceState(null, null, window.location.href);
        }
    </script>
</body>
</html>