<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Profile</title>
</head>
<body>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background-color: blanchedalmond;
            color: #A82400;
        }
        header {
            background-color: transparent;
            padding: 5px;
            padding-left: 25px;
            width: 100%;
            position: sticky;
            backdrop-filter: blur(10px);
            top: 0; 
            z-index: 1000;
        }

        .profile-container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }

        /* Profile Cover Section */
        .profile-cover {
            height: 200px;
            background-color: #A82400;
            border-radius: 20px 20px 0 0;
            position: relative;
        }

        .profile-info {
            position: relative;
            background-color: blanchedalmond;
            border-radius: 0 0 20px 20px;
            padding: 60px 20px 20px;
            margin-bottom: 20px;
            text-align: center;
        }

        .profile-avatar {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            border: 4px solid blanchedalmond;
            position: absolute;
            top: -60px;
            left: 50%;
            transform: translateX(-50%);
            background-color: #fff;
            overflow: hidden;
        }

        .profile-name {
            font-size: 24px;
            margin-bottom: 10px;
        }

        .profile-username {
            color: #A82400;
            opacity: 0.8;
            margin-bottom: 15px;
        }

        .profile-bio {
            max-width: 500px;
            margin: 0 auto 20px;
        }

        /* Action Buttons */
        .action-buttons {
            display: flex;
            gap: 10px;
            justify-content: center;
            margin-bottom: 20px;
        }

        .action-button {
            padding: 8px 20px;
            border: 2px solid #A82400;
            border-radius: 20px;
            cursor: pointer;
            transition: all 0.3s ease;
            background: none;
            color: #A82400;
        }

        .action-button:hover {
            background: #A82400;
            color: blanchedalmond;
        }

        /* Stats Bar */
        .stats-bar {
            display: flex;
            justify-content: space-around;
            padding: 20px;
            background: rgba(168, 36, 0, 0.05);
            border-radius: 15px;
            margin-bottom: 20px;
        }

        .stat-item {
            text-align: center;
        }

        .stat-number {
            font-size: 20px;
            font-weight: bold;
        }

        .stat-label {
            font-size: 14px;
            opacity: 0.8;
        }

        /* Content Tabs */
        .content-tabs {
            display: flex;
            margin-bottom: 20px;
            border-bottom: 2px solid rgba(168, 36, 0, 0.2);
            padding-bottom: 10px;
        }

        .tab {
            padding: 10px 20px;
            cursor: pointer;
            position: relative;
            margin-left: 20%;
        }
        .tab-icon {
            fill: currentColor;
            color: #A82400;
            opacity: 0.5; /* Make non-active tabs slightly transparent */
        }

        .tab svg {
            color: #A82400;
            opacity: 0.5;
            transition: opacity 0.3s ease;
        }
        
        .tab.active .tab-icon {
            opacity: 1; 
        }

        .tab.active svg {
            opacity: 1;
        }
        
        /* Remove these previous rules since we're handling it differently now */
        .bookmark-tab svg {
            color: #A82400;
            fill: #A82400;
        }
        .tab.active {
            font-weight: bold;
        }

        .tab.active::after {
            content: '';
            position: absolute;
            bottom: -12px;
            left: 0;
            width: 100%;
            height: 2px;
            background: #A82400;
        }

        a svg{
            color:#A82400;
        }


        /* Interaction Bar */
        .interaction-bar {
            display: flex;
            gap: 15px;
            padding: 10px 15px;
            background: rgba(168, 36, 0, 0.05);
            border-radius: 10px;
        }

        .interaction-item {
            display: flex;
            align-items: center;
            gap: 5px;
            font-size: 14px;
            cursor: pointer;
            transition: opacity 0.3s ease;
        }

        .interaction-item:hover {
            opacity: 0.7;
        }

        @media (max-width: 600px) {
            .content-grid {
                grid-template-columns: 1fr;
            }

            .action-buttons {
                flex-wrap: wrap;
            }
        }
    </style>
</head>
<body>
    <header class="header">
        <div class="d-flex justify-content-between align-items-center flex-wrap">
            <a href="/community/<%=community.id%>/link">
                <h1 style="color: #A82400; margin: 20px;">
                    <img src="/group.png" alt="group-icon" height="35" width="35">
                </h1>
            </a>
        </div>
    </header>
    <div class="profile-container">
        <div class="profile-cover">
            <%if(user.image.url){%>
                <a href="https://globelynews.com/wp-content/uploads/2019/05/SpaceX_Hangar.jpg"><img src="https://globelynews.com/wp-content/uploads/2019/05/SpaceX_Hangar.jpg" alt="Profile" style="width: 100%; height: 100%; object-fit: cover; border-radius: 20px 20px 0 0;"></a>
            <%}else{%>
                <div class="profile-cover"></div>
            <%}%>
        </div>
        <div class="profile-info">
            <div class="profile-avatar">
                <a href="<%=user.image.url%>"><img src="<%=user.image.url%>" alt="Profile" style="width: 100%; height: 100%; object-fit: cover;"></a>
            </div>
            <h1 class="profile-name"><%=user.name%></h1>
            <div class="profile-username">Mustafa</div>
            <small class="profile-bio">Technologist âœ¨</small><br><br>
            <small style="color: rgb(96, 93, 93);"><%=user.role%> at <%=user.company%></small>
            
            <div class="action-buttons" style="margin-top: 15px;">
                <button class="action-button">Follow</button>
                <button class="action-button">Message</button>
                <button class="action-button">Link</button>
            </div>
        </div>

        <div class="stats-bar">
            <div class="stat-item">
                <div class="stat-number">15.2K</div>
                <div class="stat-label">Followers</div>
            </div>
            <div class="stat-item">
                <div class="stat-number">892</div>
                <div class="stat-label">Following</div>
            </div>
            <div class="stat-item">
                <div class="stat-number">1.2M</div>
                <div class="stat-label">Likes</div>
            </div>
        </div>

        <div class="content-tabs">
            <div class="tab">
                <button style="background-color: transparent; border: none; cursor: pointer;" onclick="showPost(this)">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-box-seam" viewBox="0 0 16 16">
                        <path d="M8.186 1.113a.5.5 0 0 0-.372 0L1.846 3.5l2.404.961L10.404 2zm3.564 1.426L5.596 5 8 5.961 14.154 3.5zm3.25 1.7-6.5 2.6v7.922l6.5-2.6V4.24zM7.5 14.762V6.838L1 4.239v7.923zM7.443.184a1.5 1.5 0 0 1 1.114 0l7.129 2.852A.5.5 0 0 1 16 3.5v8.662a1 1 0 0 1-.629.928l-7.185 2.874a.5.5 0 0 1-.372 0L.63 13.09a1 1 0 0 1-.63-.928V3.5a.5.5 0 0 1 .314-.464z"/>
                    </svg>
                </button>
                
            </div>
            <div class="tab">
                <button style="background-color: transparent; border: none; cursor: pointer;" onclick="showLike(this)">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-star" viewBox="0 0 16 16">
                        <path d="M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.56.56 0 0 0-.163-.505L1.71 6.745l4.052-.576a.53.53 0 0 0 .393-.288L8 2.223l1.847 3.658a.53.53 0 0 0 .393.288l4.052.575-2.906 2.77a.56.56 0 0 0-.163.506l.694 3.957-3.686-1.894a.5.5 0 0 0-.461 0z"/>
                    </svg>
                </button>
            </div>
            <div class="tab">
                <button style="background-color: transparent; border: none; cursor: pointer;" onclick="showComment(this)">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chat-square-quote" viewBox="0 0 16 16">
                        <path d="M14 1a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1h-2.5a2 2 0 0 0-1.6.8L8 14.333 6.1 11.8a2 2 0 0 0-1.6-.8H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h2.5a1 1 0 0 1 .8.4l1.9 2.533a1 1 0 0 0 1.6 0l1.9-2.533a1 1 0 0 1 .8-.4H14a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z"/>
                        <path d="M7.066 4.76A1.665 1.665 0 0 0 4 5.668a1.667 1.667 0 0 0 2.561 1.406c-.131.389-.375.804-.777 1.22a.417.417 0 1 0 .6.58c1.486-1.54 1.293-3.214.682-4.112zm4 0A1.665 1.665 0 0 0 8 5.668a1.667 1.667 0 0 0 2.561 1.406c-.131.389-.375.804-.777 1.22a.417.417 0 1 0 .6.58c1.486-1.54 1.293-3.214.682-4.112z"/>
                    </svg>
                </a>
            </div>
        </div>
    </div>

    <script>

        async function showPost(button) {
            try {
                const response = await fetch('/showPost', {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
        
                if (response.ok) {
                    const data = await response.json();
                    button.classList.toggle('followed');
                    button.textContent = button.classList.contains('followed') ? 'Following' : 'Follow';
                } else {
                    console.error('Failed to follow');
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }
        
        async function showLike(button) {
            try {
                const response = await fetch('/showlike', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
        
                if (response.ok) {
                    const data = await response.json();
                    button.classList.toggle('followed');
                    button.textContent = button.classList.contains('followed') ? 'Linked' : 'Link';
                } else {
                    console.error('Failed to link');
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }

        async function showComment(button) {
            try {
                const response = await fetch('/showComment', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
        
                if (response.ok) {
                    const data = await response.json();
                    button.classList.toggle('followed');
                    button.textContent = button.classList.contains('followed') ? 'Linked' : 'Link';
                } else {
                    console.error('Failed to link');
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }

        let icons = document.querySelectorAll('.tab');
        icons.forEach(icon => {
            icon.addEventListener("click", () => {
             // Remove active class from all tabs
              icons.forEach(tab => tab.classList.remove("active"));
        
              // Add active class to clicked tab
               icon.classList.add("active");
            });
        });
    </script>
</body>
</html>